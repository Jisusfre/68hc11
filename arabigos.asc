* PROYECTO 2

*DECLARACION CONSTANTES

SCDR   EQU   $102F
SCCR2  EQU   $102D
SCSR   EQU   $102E
SCCR1  EQU   $102C
BAUD   EQU   $102B
HPRIO  EQU   $103C
SPCR   EQU   $1028
CSCTL  EQU   $105D
OPT2   EQU   $1038
DDRD   EQU   $1009

ORDEN EQU $0000
DIR     EQU $0070
NUMCARAC EQU $0010
BERROR2 EQU $0003  
O   EQU $0023  *BANDERA DEL OK
BANDERA_ERROR EQU  $0011 * BANDERA DE ERROR PARA ARABIGOS


	ORG $3000
	   				FCC "ERROR, NUMERO ROMANO INVALIDO."   *29 CARACTERES
MENSAJE_E_ARABIGO	FCC "ERROR, NUMERO ARABIGO INVALIDO."  *30
					FCC "ERROR, NUMERO FUERA DE RANGO."    *28
CIEN				FCC "C "      		*100
DOSCIENTOS          FCC "CC "      		*200
TRESCIENTOS         FCC "CCC "      	*300
CUATROCIENTOS       FCC "CD "      		*400
QUINIENTOS          FCC "D "     		*500
SEISCIENTOS         FCC "DC "      		*600
SETECIENTOS        	FCC "DCC "      	*700
OCHOCIENTOS        	FCC "DCCC "  		*800
NOVECIENTOS       	FCC "CM "    		*900
DIEZ        		FCC "X "            *10  
VEINTE              FCC "XX "           *20   
TREINTA       		FCC "XXX "          *30 
CUARENTA            FCC "XL "           *40
CINCUENTA           FCC "L "            *50
SESENTA				FCC "LX "           *60
SETENTA				FCC "LXX "          *70
OCHENTA				FCC "LXXX "         *80
NOVENTA				FCC "XC "       	*90
UNO					FCC "I "      		*1
DOS					FCC "II "      		*2
TRES				FCC "III "      	*3
CUATRO				FCC "IV "      		*4
CINCO				FCC "V "      		*5
SEIS				FCC "VI "      		*6
SIETE				FCC "VII "      	*7
OCHO				FCC "VIII "         *8
NUEVE				FCC "XI "           *9

*** NUMEROS EN LETRA
**AQUI VAN 
    ORG $8000
INICIO
		LDS #$00FF *Configuracion del puerto serial
		JSR SERIAL * SUBRUTINA PARA CONFIG EL PUERTO SERIAL
		JSR INICIALIZAR
		
CICLATE
		LDAA	#'?
		STAA	ORDEN
CUENTA
        LDAA    ORDEN
        CMPA    #'?
        BEQ     CUENTA

		*JSR VALIDACION_ROMANO
		*SALTAR A LA CONVERSION DE ROMANOS
		
ENTRADA
        CMPA #61            *Valida que le llegue un = para saber que es fin de la cadena que mete el usuario
	    BEQ TRADUCCION_A_ROMANO
        
        CMPA #'O  *CASO EN QUE RECIBA OK
        BEQ CASOO
        CMPA #'K
        BEQ CASOOK  *CASO EN QUE RECIBA UNA K
		JSR VALIDACION_ARABIGO
		CMPB #1			*LLEVA $?
		BNE CICLATE

        LDAB    NUMCARAC    
        CMPB    #3
        BHI     ERROR_CANTIDAD       *POR SI YA LLEGARON LOS 4 CARACTERES ES UN ERROR                       

      	INCB 			
      	STAB NUMCARAC		 	    *INCREMENTAMOS EL DE CARACTERES
             
        STAA $00,X
        INX                         *CAMBIAMOS EL CONTADOR DE LA SIGUIENTE MEMORIA A ESCRIBIR

        JMP CICLATE

CASOO
		LDAB O
		INCB
		STAB O
		JMP FIN

CASOOK
		LDAB O
		CMPB #0
		BEQ CICLATE
		JSR INICIALIZAR
        JMP CICLATE

TRADUCCION_A_ROMANO
		LDAA BANDERA_ERROR
		CMPA #1
		BEQ CICLATE
		LDX #$0070      *REGRESAMOS A LA CIFRA MAS SIGNIFICATIVA
		LDAA NUMCARAC       *COMPARAMOS EL NUMERO DE CARACTERES
		CMPA #1
		BEQ CASO_UNIDAD     
		CMPA #2
		BEQ CASO_DECENA
		CMPA #3
		BEQ CASO_CENTENA
		CMPA #4
		BEQ CASO_MILLAR	
		JMP CICLATE	      *POR SI NO SE VALIDA BIEN
    

CASO_MILLAR
		
		LDY #$0050      *DIRECCION DE ESCRITURA
		LDX #$0070      *DIRECCION DE NUM
		LDAB $00,X      *TOMAR EL PRIMER NUM CHAR Y PONERLO EN B
        CMPB #$31     
		BLO CASO_CENTENA * VALIDA QUE SEA MAYOR A 0 EN ASCII

CASO_ESCRIBE_MILLAR
		LDAA #'M		* CARGA UNA M EN EL ACUMULADOR A
		STAA $00,Y      * ESCRIBE EN LA DIR DE Y   
		INY 			* INCREMENTAMOS Y PARA CONTINUAR ESCRIBIENDO 
		DECB            * DECREMENTAMOS B
		CMPB #$30       * ASCII DE 0 
		BNE CASO_ESCRIBE_MILLAR       * MIENTRAS NO ENCONTREMOS UN PUNTO(.) SE REPITE
		INX             * PASAMOS AL SIGUIENTE NUM DIGITO        
CASO_CENTENA
		JSR ESCRIBE_CENTENA
		INX
CASO_DECENA
		JSR ESCRIBE_DECENA
		INX
CASO_UNIDAD
		JSR ESCRIBE_UNIDAD
		JMP CICLATE






COMPARADOR




ERROR_CANTIDAD
		LDX #$0050     * DIRECCION DEL MENSAJE
		LDY #MENSAJE_E_ARABIGO    * ORG DE LOS FCC
		JSR ERROR      
		JMP CICLATE


*1 50
*3 51
*7 52
*9 53
*4 10



FIN 
		LDAA	#'?
		STAA	ORDEN
CICLO1
		LDAA	ORDEN
		CMPA	#'?
		BEQ	    CICLO1
		JMP ENTRADA

*Configuracion del puerto serial
SERIAL 
		LDD   #$302C  * CONFIGURA PUERTO SERIAL
		STAA  BAUD    * BAUD  9600  para cristal de 8MHz
		STAB  SCCR2   * HABILITA  RX Y TX PERO INTERRUPCN SOLO RX
		LDAA  #$00
		STAA  SCCR1   * 8 BITS

		LDAA  #$FE    * CONFIG PUERTO D COMO SALIDAS (EXCEPTO PD0)
		STAA  DDRD    * SEA  ENABLE DEL DISPLAY  PD4  Y RS PD3
						
		
		LDAA  #$04
		STAA  HPRIO

		LDAA  #$00
		TAP
		RTS
        

INICIALIZAR
		LDX #$0070
		LDY #$0070
		CLR O
		CLR UNO
		CLR BERROR2	*DEJA EN CERO LAS VARIABLES
		CLR NUMCARAC
		CLR BANDERA_ERROR
LIM
		LDAA #00
		STAA $00,Y
		INY
		CPY #$008F
		BNE LIM
		LDY #$0050
LIM2
		LDAA #00
		STAA $00,Y
		INY
		CPY #$006F
		BNE LIM2
		RTS
		
VALIDACION_ARABIGO
		CMPA #$30 *Valor 0
		BLO ERROR_ARABIGO
		CMPA #$3A * Valor 9
		BHI ERROR_ARABIGO
		LDAB #$1
FIN_VALIDACION_ARABIGO
		RTS

ERROR_ARABIGO
		LDX #$0050     				* DIRECCION DEL MENSAJE
		LDY #MENSAJE_E_ARABIGO     * MENSAJE
		JSR ERROR
		JMP FIN_VALIDACION_ARABIGO

		
VALIDACION_ROMANO
		CMPA #$4D *VALOR M
		BNE ERROR
		CMPA #$44 *VALOR D
		BNE ERROR
		CMPA #$43 *VALOR C
		BNE ERROR
		CMPA #$4C *VALOR L
		BNE ERROR
		CMPA #$58 *VALORD X
		BNE ERROR
		CMPA #$56 *VALOR V
		BNE ERROR
		CMPA #49 *VALOR I
		BNE ERROR
		RTS


ERROR
		LDAA #1
		STAA BANDERA_ERROR
ERROR_CICLO
		LDAB $00,Y		*TOMA CARACTER DEL FCC
		STAB $00,X      *ESCRIBE EL CHAR EN LA DIR DE X
		INX             
		INY 			* INCREMENTAMOS X Y Y
		CMPB #46        * ASCII DE PUNTO
		BNE ERROR_CICLO       * MIENTRAS NO ENCONTREMOS UN PUNTO(.) SE REPITE
		RTS
ESCRIBE_CENTENA
		PSHX
		LDAA $00,X
		SUBA #$30
		CMPA #1
		BEQ  NUM_1_CENTENA
		CMPA #2
		BEQ  NUM_2_CENTENA
		CMPA #3
		BEQ  NUM_3_CENTENA
		CMPA #4
		BEQ  NUM_4_CENTENA
		CMPA #5
		BEQ  NUM_5_CENTENA
		CMPA #6
		BEQ  NUM_6_CENTENA
		CMPA #7
		BEQ  NUM_7_CENTENA
		CMPA #8
		BEQ  NUM_8_CENTENA
		CMPA #9
		BEQ  NUM_9_CENTENA
FIN_CENTENA
		PULX
        RTS
NUM_1_CENTENA
		LDX #CIEN     * DIRECCION DE MEMORIA DE 100
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_2_CENTENA
		LDX #DOSCIENTOS     * DIRECCION DE MEMORIA DE 200
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_3_CENTENA
		LDX #TRESCIENTOS     * DIRECCION DE MEMORIA DE 300
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_4_CENTENA
		LDX #CUATROCIENTOS     * DIRECCION DE MEMORIA DE 400
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_5_CENTENA
		LDX #QUINIENTOS     * DIRECCION DE MEMORIA DE 500
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_6_CENTENA
		LDX #SEISCIENTOS     * DIRECCION DE MEMORIA DE 600
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_7_CENTENA
		LDX #SETECIENTOS     * DIRECCION DE MEMORIA DE 700
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_8_CENTENA
		LDX #OCHOCIENTOS     * DIRECCION DE MEMORIA DE 800
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA
NUM_9_CENTENA
		LDX #NOVECIENTOS    * DIRECCION DE MEMORIA DE 900
		JSR CICLO_ESCRITURA
		JMP FIN_CENTENA

CICLO_ESCRITURA
        LDAB $00,X		* TOMA CARACTER DEL FCC
		STAB $00,Y      * ESCRIBE EL CHAR EN LA DIR DE X
		INX             
		INY 			* INCREMENTAMOS X Y Y
		CMPB #$20        * ASCII DE ESPACIO
		BNE CICLO_ESCRITURA   * MIENTRAS NO ENCONTREMOS UN PUNTO(.) SE REPITE
		DEY
		RTS

ESCRIBE_DECENA
		PSHX
		LDAA $00,X
		SUBA #$30
		CMPA #1
		BEQ  NUM_1_DECENA
		CMPA #2
		BEQ  NUM_2_DECENA
		CMPA #3
		BEQ  NUM_3_DECENA
		CMPA #4
		BEQ  NUM_4_DECENA
		CMPA #5
		BEQ  NUM_5_DECENA
		CMPA #6
		BEQ  NUM_6_DECENA
		CMPA #7
		BEQ  NUM_7_DECENA
		CMPA #8
		BEQ  NUM_8_DECENA
		CMPA #9
		BEQ  NUM_9_DECENA
FIN_DECENA
		PULX
        RTS
        
NUM_1_DECENA
		LDX #DIEZ     * DIRECCION DE MEMORIA DE 10
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_2_DECENA
		LDX #VEINTE     * DIRECCION DE MEMORIA DE 20
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_3_DECENA
		LDX #TREINTA     * DIRECCION DE MEMORIA DE 30
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_4_DECENA
		LDX #CUARENTA     * DIRECCION DE MEMORIA DE 40
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_5_DECENA
		LDX #CINCUENTA     * DIRECCION DE MEMORIA DE 50
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_6_DECENA
		LDX #SESENTA     * DIRECCION DE MEMORIA DE 60
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_7_DECENA
		LDX #SETENTA     * DIRECCION DE MEMORIA DE 70
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_8_DECENA
		LDX #OCHENTA     * DIRECCION DE MEMORIA DE 80
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA
NUM_9_DECENA
		LDX #NOVENTA     * DIRECCION DE MEMORIA DE 90
		JSR CICLO_ESCRITURA
		JMP FIN_DECENA

ESCRIBE_UNIDAD
		PSHX
		LDAA $00,X
		SUBA #$30
		CMPA #1
		BEQ  NUM_1_UNIDAD
		CMPA #2
		BEQ  NUM_2_UNIDAD
		CMPA #3
		BEQ  NUM_3_UNIDAD
		CMPA #4
		BEQ  NUM_4_UNIDAD
		CMPA #5
		BEQ  NUM_5_UNIDAD
		CMPA #6
		BEQ  NUM_6_UNIDAD
		CMPA #7
		BEQ  NUM_7_UNIDAD
		CMPA #8
		BEQ  NUM_8_UNIDAD
		CMPA #9
		BEQ  NUM_9_UNIDAD
FIN_UNIDAD
		PULX
        RTS
        
NUM_1_UNIDAD
		LDX #UNO     * DIRECCION DE MEMORIA DE 1
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_2_UNIDAD
		LDX #DOS     * DIRECCION DE MEMORIA DE 2
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_3_UNIDAD
		LDX #TRES     * DIRECCION DE MEMORIA DE 3
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_4_UNIDAD
		LDX #CUATRO     * DIRECCION DE MEMORIA DE 4
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_5_UNIDAD
		LDX #CINCO     * DIRECCION DE MEMORIA DE 5
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_6_UNIDAD
		LDX #SEIS     * DIRECCION DE MEMORIA DE 6
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_7_UNIDAD
		LDX #SIETE     * DIRECCION DE MEMORIA DE 7
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_8_UNIDAD
		LDX #OCHO     * DIRECCION DE MEMORIA DE 8
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD
NUM_9_UNIDAD
		LDX #NUEVE     * DIRECCION DE MEMORIA DE 9
		JSR CICLO_ESCRITURA
		JMP FIN_UNIDAD



        


***********************************
* ATENCION A INTERRUPCION SERIAL
***********************************
	ORG	$F100
	LDAA	SCSR
	LDAA	SCDR
	STAA	ORDEN 
	RTI

***********************************
* VECTOR INTERRUPCION SERIAL
***********************************
	ORG	$FFD6
	FCB	$F1,$00       


***********************************
*RESET
***********************************
	ORG	$FFFE
RESET	FCB	$80,$00
***********************************

	END	$8000